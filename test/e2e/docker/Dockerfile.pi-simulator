# Raspberry Pi OS Simulator for GrannyTV Testing
FROM debian:bookworm-slim

# Install system packages that would be on Raspberry Pi OS
RUN apt-get update && apt-get install -y \
    systemd \
    systemd-sysv \
    dbus \
    hostapd \
    dnsmasq \
    python3 \
    python3-pip \
    python3-flask \
    iproute2 \
    iptables \
    net-tools \
    wireless-tools \
    git \
    curl \
    sudo \
    procps \
    psmisc \
    nano \
    && rm -rf /var/lib/apt/lists/*

# Create a user similar to Pi default user
RUN useradd -m -s /bin/bash jeremy && \
    echo "jeremy:raspberry" | chpasswd && \
    usermod -aG sudo jeremy && \
    echo "jeremy ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create directories that would exist on Pi
RUN mkdir -p /home/jeremy/gtv \
    /opt/grannytv-setup \
    /var/lib \
    /etc/hostapd \
    /etc/systemd/system

# Set up systemd environment
RUN systemctl set-default multi-user.target

# Create mock wireless interface
RUN mkdir -p /sys/class/net/wlan0 && \
    echo "wlan0" > /sys/class/net/wlan0/uevent

# Install Python testing dependencies
RUN pip3 install --break-system-packages \
    pytest \
    requests \
    flask \
    pexpect \
    psutil

# Copy scripts
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
COPY health_server.py /usr/local/bin/health_server.py
RUN chmod +x /usr/local/bin/entrypoint.sh

# Set working directory
WORKDIR /home/jeremy/gtv

# Use our entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["systemd"]

# Expose ports for web server testing
EXPOSE 8080 80

# Labels for identification
LABEL purpose="grannytv-e2e-testing"
LABEL component="pi-simulator"